[ { "title": "[책리뷰] SQL Cookbook", "url": "/posts/sql-cookbook/", "categories": "Blogging, Book", "tags": "SQL, Cookbook, Book, 한빛미디어, Oreilly, Review", "date": "2022-02-23 23:37:00 +0900", "snippet": "“한빛미디어 활동을 위해서 책을 제공받아 작성된 서평입니다.&quot;아주 오랜만에 읽게된 SQL 서적인 것 같다. 마지막으로 읽었던 SQL 관련 책은 “SQL AntiPatterns” 였다.이책 SQL Cookbook 은 전형적인 Cookbook 형식의 책으로 14개의 챕터로 각 챕터마다 큰 주제 아래 여러개의 문제들로 이뤄져있다. 쿡북의 장점답게 처음부터 모든 내용을 읽어나갈 필요는 없고, 먼저 목차를 보면서 관심이 가거나 가장 궁금했던 주제나 문제별로 찾아서 읽는 장점이 있겠다. 물론 입문자라면 처음부터 하나씩 읽어나가..." }, { "title": "AWS Elastic Beanstalk에서 nginx 설정", "url": "/posts/beanstalk-extending-linux-platform/", "categories": "Blogging, AWS", "tags": "AWS, Beanstalk, .ebextensions, nginx, client_max_body_size", "date": "2021-01-29 00:25:00 +0900", "snippet": "오랜만에 신규 프로젝트를 만들어 AWS Beanstalk를 이용하여 배포를 하게 되었다. 조금 대용량 데이터를 업로드 해야하는 기능이라 nginx의 설정을 변경해서 업로드파일 용량제한을 늘려줘야 했다. 운영중인 다른 서비스들에서 이미 .ebextendsions를 이용하여 서버의 다양한 환경설정등을 변경하고 있었기에 특별한 문제는 아니었다. 대략 아래와 같은 내용의 파일을 .ebextensions 디렉토리 아래(.ebextensions/nginx/conf.d/) 생성하고 배포만 하면 끝! (인줄 알았는데…)files: &quo..." }, { "title": "[책리뷰] 자바 코딩의 기술", "url": "/posts/java-by-comparison-book-review/", "categories": "Blogging, Java, Book", "tags": "Java, Book, Review", "date": "2021-01-06 00:46:00 +0900", "snippet": " 바보도 컴퓨터가 이해하는 코드는 작성할 수 있다. 훌륭한 프로그래머는 인간이 이해하는 코드를 작성한다. - 마틴 파울러길벗 출판사에서 진행한 “개발자 리뷰어”를 통해 읽게 된 책이다. 이 책 자바 코딩의 기술은 번역서로 원서는 Java By Comparison 이고 2018년에 나온 책인 것 같다. 부재가 “현장에서 뽑은 70가지 예제로 배우는 코드 잘 짜는 법” 인데, 원서의 부재로는 “Become a Java Craftsman in 70 Examples” 이다. 저자가 3명이나 되고, 솔직히 눈에 익은 이름은 아니었다...." }, { "title": "잡담 1", "url": "/posts/blar-blar/", "categories": "Blogging, 잡담", "tags": "잡담", "date": "2020-11-15 01:48:00 +0900", "snippet": " 블로그에 글 하나 올리는게 쉬운 일이 아니란걸 절실히 느낀다. 최대한 간단한 내용이나 주제부터라도 자주 써보려고 하는데, 생각처럼 쉽지 않다. 최근 몇개월간은 개발과 무관한 분야에 빠져서 책도 그와 관련된 책만 주구장창 읽어대고 있다. 그나마 점심 시간에 30분 정도씩 개발책을 읽고는 있지만, 그리 진도가 잘 나가지는 않는다. 최근에 회사 내부적으로 큰 변화가 생겼고, 개발자 채용도 진행 중이지만 이름 없는 작은 스타트업이라 지원자가 거의 없다. 당연히 연봉이든 복지든 내새울게 있어야 하는데… 회사가 아..." }, { "title": "Cryptography for Beginners 정리", "url": "/posts/cryptography-for-beginners/", "categories": "Blogging, Cryptography", "tags": "Cryptography, Cipher, Symmetric Algorithm, Asymmetric Algorithm", "date": "2020-11-15 01:25:00 +0900", "snippet": "프로그래밍을 하면서 항상 가려운 부분 중 한 곳이 암호화 관련이다. 전혀 사용 안하는 것도 아니지만, 사용할 때는 기존에 만들어진 유틸리티 클래스의 메서드들을 사용 하거나 구글링이 답이다. 하지만 업무나 관심사 중 암호화 관련한 부분은 (중요도는 무시하고) 대략 5% 정도이지 않을까. 그러니 공부를 한다해도 지나고나면 다 까먹을 수 밖에 없다.dev.to 에서 Cryptography for Beginners 이란 글을 보고 정리를 해보려고 한다. 특히 마음에 들었던 부분은 용어 설명을 먼저 ‘간단하게’ 하면서 시작한다는 것이다..." }, { "title": "MyBatis가 setter/getter를 찾는 방법", "url": "/posts/mybatis-refector/", "categories": "Blogging, MyBatis", "tags": "Java, MyBatis, Reflector.java", "date": "2020-10-06 15:43:00 +0900", "snippet": "MyBatis를 사용하면서 보통 사용해오던 방식을 계속 따르게 된다. 경험을 통해서 애매하거나 문제가 생기겠지 생각되는 부분은 피해가면서 사용하게 되는데, 그러다보니 해보지 않은 부분에 대해서는 잘 모르고 넘어가는 경우가 많다. 최근 다른 이유로 테스트 코드를 작성하다가 몰랐던 것들을 알게 되어서 정리해본다.DTO에 getter와 setter가 없어도 된다DTO를 사용해서 데이터를 가져올 때 리플렉션(reflection)을 이용한다. 그래서 매개변수가 없는 기본생성자가 있어야 한다는 정도만 알고 있었다. 그리고 자바빈 규약을 ..." }, { "title": "System call 이란?", "url": "/posts/system-call-in-os/", "categories": "Blogging, OS, java", "tags": "System call, OS, NIO, java", "date": "2020-10-05 23:13:00 +0900", "snippet": "최근 자바 NIO 관련 책을 보고 있는데 자연스럽게 System Call 이 가끔 언급된다. 물론 OS와 프로그램 사이에서 low-level의 기능이 필요할 때 사용하는 인터페이스라는 정도로 대충 이해 할 수 있겠다.앞 문장을 좀 정리 해보면, ‘프로그램’ 이라기 보다는 사용자의 프로그램이 실행되고 있는 ‘프로세스 Process’ 라고 하는게 좀 더 정확한 것 같다. 그리고 low-level의 기능이라 함은 OS의 커널이 제공하는 ‘서비스 Service’ 라고 하면 되겠다. 지금 보고 있는 자바 책에서도 ‘커널로부터 제공받는 ..." }, { "title": "Spring Security Architecture 내용정리", "url": "/posts/spring-security-architecture-review/", "categories": "Blogging, Spring, Security", "tags": "Spring Security", "date": "2020-10-04 14:16:00 +0900", "snippet": "오래전 spring.io에 올라왔던 Spring Security Architecture 의 내용을 정리해 보았다. 읽을 때는 금방 할듯 했는데, 막상 우리말로 적어 보려니 상당히 여럽네. 몇몇 문장은 직역/의역으로 넘기기도 했고.Spring Security를 프로젝트에 사용해 본 건 몇번 안된다. 제대로 학습 후 사용하기 보다는 급한대로 구글링하면서 적용할 수 밖에 없었다. 또한 Spring Security는 초기 설정하고 구조를 잡고나면 관련해서 거의 볼 일이 없다보니, 다시 사용할 일이 생기면 또 바닥부터 시작할 듯하다.A..." }, { "title": "Jackson UnrecognizedPropertyException - Unrecognized field", "url": "/posts/json-unrecognized-field-error/", "categories": "Blogging, Spring", "tags": "RestTemplate, Jackson, Json, MessageConverter", "date": "2020-09-27 00:55:00 +0900", "snippet": "Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field &quot;$xxxxx&quot;, not marked as ignorable ...연동하던 외부 서비스 api 의 json 응답값에 새로운 필드가 추가된 모양이다. DTO에 정의된 필드의 값만 바인딩 되도록 해뒀어야 하는데, 또 까먹은 모양이다. (이게 ObjectMapper의 디폴트 값이면 안되는 것인가…)방법은 두가지가 있는데, 간단하게는 DTO에 어노..." }, { "title": "RestTemplate에서 body를 가진 delete 요청 문제 (Spring 3.2.x)", "url": "/posts/resttemplate-delete-with-payload/", "categories": "Blogging, Spring", "tags": "RestTemplate, Spring", "date": "2020-09-04 22:36:00 +0900", "snippet": "이메일 발송을 위해 이용하는 외부 서비스 연동을 하던 중, DELETE 메서드를 이용하는 API가 있었다. 그런데 해당 api로 넘기는 파라미터는 request의 body를 이용하라고 하는 것이 었다. DELETE 메서드를 이용 할 때 복잡한 값들을 넘겨본 적이 많지 않았던 것 같은데, 내 기억으로는 DELETE 로는 body 값을 넘길 수 없다고 알고 있었다. 거기다 RestTemplate를 이용해서 테스트를 해보니 역시나 안되는 것이었다. (400 Bad Request는 아니었고, 해당 서비스에서 자체 정의한 응답 코드긴 ..." }, { "title": "블로거 1일차!", "url": "/posts/getting-started/", "categories": "Blogging", "tags": "잡담", "date": "2020-09-04 21:49:00 +0900", "snippet": "드.디.어 블로그를 시작하게 되었다! 그런데 뭘 쓰지?" } ]
